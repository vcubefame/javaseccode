# This is a basic workflow to help you get started with Actions

name: "SAST_PUSH"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
 push:
  branches:
   - master
   - develop
  tags-ignore:
   - '*'
   
  paths-ignore:
   - '.txt'
   - '*.MD'
   - '*.md'
   - 'LICENSE'
   - 'docs/**'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Coverity:
    # The type of runner that the job will run on
    runs-on: self-hosted 
      

env:
  COV_URL: ${{ secrets.COV_URL }}
  COV_USER: ${{ secrets.COV_USER }}
  COVERITY_PROJECT: githubactions
  COVHOME: C:\Program Files\Coverity\Coverity Static Analysis\bin
  BLDCMD: mvn clean compile
  CHECKERS: --all
  GATE_VIEW: commiter-test
steps:
 - uses: AutoModality/action-clean@v1
 - uses: actions/checkout@v2
 - uses: actions/setup-java@v1
   with:
     java-version: 15
 - name: Coverity Full Scan
   run: |
    set -x
    $COVHOME/bin/cov-configure --java
    $COVHOME/bin/cov-build --dir idir --fs-capture-search $GITHUB_WORKSPACE $BLDCMD
    $COVHOME/bin/cov-analyze --dir idir --ticker-mode none --strip-path $GITHUB_WORKSPACE $CHECKERS
    $COVHOME/bin/cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --stream $COVERITY_PROJECT-${GITHUB_REF##*/} --scm git \
     --description $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID --target $RUNNER_OS --version $GITHUB_SHA
    $COVHOME/bin/cov-format-errors --dir idir --json-output-v8 cov-findings-v8.json
    $COVHOME/node/bin/node $COVHOME/SARIF/cov-format-sarif-for-github.js --inputFile cov-findings-v8.json --outputFile cov-findings-sarif.json --repoName $GITHUB_REPOSITORY --checkoutPath $GITHUB_REPOSITORY `pwd` $GITHUB_SHA
 - name: Upload SARIF file
   uses: github/codeql-action/upload-sarif@v1
   with:
     # Path to SARIF file relative to the root of the repository
     sarif_file: cov-findings-sarif.json
 - name: Coverity Quality Gate
   run: |
    curl -fLsSk --user $COV_USER:$COV_URL/api/viewContents/issues/v1/$GATE_VIEW?projectId=$COVERITY_PROJECT > results.json
    if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then cat results.json | jq .viewContentsV1.rows; exit 1; fi
